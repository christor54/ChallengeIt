/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-01-14 17:53:03 UTC)
 * on 2015-03-23 at 06:05:05 UTC 
 * Modify at your own risk.
 */

package com.challengeit.android.challengeit.userLocalEndpoint.model;

/**
 * Model definition for UserLocal.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the userLocalEndpoint. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UserLocal extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> allFriendsUsername;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime creationDate;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Invitation> friendInvitations;

  static {
    // hack to force ProGuard to consider Invitation used, since otherwise it would be stripped out
    // see http://code.google.com/p/google-api-java-client/issues/detail?id=528
    com.google.api.client.util.Data.nullOf(Invitation.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Friend> friends;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> friendsUsername;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Master> masterList;

  static {
    // hack to force ProGuard to consider Master used, since otherwise it would be stripped out
    // see http://code.google.com/p/google-api-java-client/issues/detail?id=528
    com.google.api.client.util.Data.nullOf(Master.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String password;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Player> playerList;

  static {
    // hack to force ProGuard to consider Player used, since otherwise it would be stripped out
    // see http://code.google.com/p/google-api-java-client/issues/detail?id=528
    com.google.api.client.util.Data.nullOf(Player.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer score;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String username;

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAllFriendsUsername() {
    return allFriendsUsername;
  }

  /**
   * @param allFriendsUsername allFriendsUsername or {@code null} for none
   */
  public UserLocal setAllFriendsUsername(java.util.List<java.lang.String> allFriendsUsername) {
    this.allFriendsUsername = allFriendsUsername;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getCreationDate() {
    return creationDate;
  }

  /**
   * @param creationDate creationDate or {@code null} for none
   */
  public UserLocal setCreationDate(com.google.api.client.util.DateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Invitation> getFriendInvitations() {
    return friendInvitations;
  }

  /**
   * @param friendInvitations friendInvitations or {@code null} for none
   */
  public UserLocal setFriendInvitations(java.util.List<Invitation> friendInvitations) {
    this.friendInvitations = friendInvitations;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Friend> getFriends() {
    return friends;
  }

  /**
   * @param friends friends or {@code null} for none
   */
  public UserLocal setFriends(java.util.List<Friend> friends) {
    this.friends = friends;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getFriendsUsername() {
    return friendsUsername;
  }

  /**
   * @param friendsUsername friendsUsername or {@code null} for none
   */
  public UserLocal setFriendsUsername(java.util.List<java.lang.String> friendsUsername) {
    this.friendsUsername = friendsUsername;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public UserLocal setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Master> getMasterList() {
    return masterList;
  }

  /**
   * @param masterList masterList or {@code null} for none
   */
  public UserLocal setMasterList(java.util.List<Master> masterList) {
    this.masterList = masterList;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPassword() {
    return password;
  }

  /**
   * @param password password or {@code null} for none
   */
  public UserLocal setPassword(java.lang.String password) {
    this.password = password;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Player> getPlayerList() {
    return playerList;
  }

  /**
   * @param playerList playerList or {@code null} for none
   */
  public UserLocal setPlayerList(java.util.List<Player> playerList) {
    this.playerList = playerList;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getScore() {
    return score;
  }

  /**
   * @param score score or {@code null} for none
   */
  public UserLocal setScore(java.lang.Integer score) {
    this.score = score;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUsername() {
    return username;
  }

  /**
   * @param username username or {@code null} for none
   */
  public UserLocal setUsername(java.lang.String username) {
    this.username = username;
    return this;
  }

  @Override
  public UserLocal set(String fieldName, Object value) {
    return (UserLocal) super.set(fieldName, value);
  }

  @Override
  public UserLocal clone() {
    return (UserLocal) super.clone();
  }

}
