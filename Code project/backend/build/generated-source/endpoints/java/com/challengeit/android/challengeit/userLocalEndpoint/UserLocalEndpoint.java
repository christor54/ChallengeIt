/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-01-14 17:53:03 UTC)
 * on 2015-03-23 at 06:05:05 UTC 
 * Modify at your own risk.
 */

package com.challengeit.android.challengeit.userLocalEndpoint;

/**
 * Service definition for UserLocalEndpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UserLocalEndpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class UserLocalEndpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the userLocalEndpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://challengeit-92.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "userLocalEndpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public UserLocalEndpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  UserLocalEndpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "acceptFriendInvitation".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link AcceptFriendInvitation#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.Invitation}
   * @return the request
   */
  public AcceptFriendInvitation acceptFriendInvitation(com.challengeit.android.challengeit.userLocalEndpoint.model.Invitation content) throws java.io.IOException {
    AcceptFriendInvitation result = new AcceptFriendInvitation(content);
    initialize(result);
    return result;
  }

  public class AcceptFriendInvitation extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal> {

    private static final String REST_PATH = "acceptFriendInvitation";

    /**
     * Create a request for the method "acceptFriendInvitation".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link AcceptFriendInvitation#execute()} method to invoke the
     * remote operation. <p> {@link AcceptFriendInvitation#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.Invitation}
     * @since 1.13
     */
    protected AcceptFriendInvitation(com.challengeit.android.challengeit.userLocalEndpoint.model.Invitation content) {
      super(UserLocalEndpoint.this, "POST", REST_PATH, content, com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal.class);
    }

    @Override
    public AcceptFriendInvitation setAlt(java.lang.String alt) {
      return (AcceptFriendInvitation) super.setAlt(alt);
    }

    @Override
    public AcceptFriendInvitation setFields(java.lang.String fields) {
      return (AcceptFriendInvitation) super.setFields(fields);
    }

    @Override
    public AcceptFriendInvitation setKey(java.lang.String key) {
      return (AcceptFriendInvitation) super.setKey(key);
    }

    @Override
    public AcceptFriendInvitation setOauthToken(java.lang.String oauthToken) {
      return (AcceptFriendInvitation) super.setOauthToken(oauthToken);
    }

    @Override
    public AcceptFriendInvitation setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AcceptFriendInvitation) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AcceptFriendInvitation setQuotaUser(java.lang.String quotaUser) {
      return (AcceptFriendInvitation) super.setQuotaUser(quotaUser);
    }

    @Override
    public AcceptFriendInvitation setUserIp(java.lang.String userIp) {
      return (AcceptFriendInvitation) super.setUserIp(userIp);
    }

    @Override
    public AcceptFriendInvitation set(String parameterName, Object value) {
      return (AcceptFriendInvitation) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addFriend".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link AddFriend#execute()} method to invoke the remote operation.
   *
   * @param friendUsername
   * @return the request
   */
  public AddFriend addFriend(java.lang.String friendUsername) throws java.io.IOException {
    AddFriend result = new AddFriend(friendUsername);
    initialize(result);
    return result;
  }

  public class AddFriend extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal> {

    private static final String REST_PATH = "addFriend/{friend_username}";

    /**
     * Create a request for the method "addFriend".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link AddFriend#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param friendUsername
     * @since 1.13
     */
    protected AddFriend(java.lang.String friendUsername) {
      super(UserLocalEndpoint.this, "POST", REST_PATH, null, com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal.class);
      this.friendUsername = com.google.api.client.util.Preconditions.checkNotNull(friendUsername, "Required parameter friendUsername must be specified.");
    }

    @Override
    public AddFriend setAlt(java.lang.String alt) {
      return (AddFriend) super.setAlt(alt);
    }

    @Override
    public AddFriend setFields(java.lang.String fields) {
      return (AddFriend) super.setFields(fields);
    }

    @Override
    public AddFriend setKey(java.lang.String key) {
      return (AddFriend) super.setKey(key);
    }

    @Override
    public AddFriend setOauthToken(java.lang.String oauthToken) {
      return (AddFriend) super.setOauthToken(oauthToken);
    }

    @Override
    public AddFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddFriend) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddFriend setQuotaUser(java.lang.String quotaUser) {
      return (AddFriend) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddFriend setUserIp(java.lang.String userIp) {
      return (AddFriend) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("friend_username")
    private java.lang.String friendUsername;

    /**

     */
    public java.lang.String getFriendUsername() {
      return friendUsername;
    }

    public AddFriend setFriendUsername(java.lang.String friendUsername) {
      this.friendUsername = friendUsername;
      return this;
    }

    @Override
    public AddFriend set(String parameterName, Object value) {
      return (AddFriend) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addPlayer".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link AddPlayer#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.Player}
   * @return the request
   */
  public AddPlayer addPlayer(com.challengeit.android.challengeit.userLocalEndpoint.model.Player content) throws java.io.IOException {
    AddPlayer result = new AddPlayer(content);
    initialize(result);
    return result;
  }

  public class AddPlayer extends UserLocalEndpointRequest<Void> {

    private static final String REST_PATH = "addPlayer";

    /**
     * Create a request for the method "addPlayer".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link AddPlayer#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddPlayer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.Player}
     * @since 1.13
     */
    protected AddPlayer(com.challengeit.android.challengeit.userLocalEndpoint.model.Player content) {
      super(UserLocalEndpoint.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AddPlayer setAlt(java.lang.String alt) {
      return (AddPlayer) super.setAlt(alt);
    }

    @Override
    public AddPlayer setFields(java.lang.String fields) {
      return (AddPlayer) super.setFields(fields);
    }

    @Override
    public AddPlayer setKey(java.lang.String key) {
      return (AddPlayer) super.setKey(key);
    }

    @Override
    public AddPlayer setOauthToken(java.lang.String oauthToken) {
      return (AddPlayer) super.setOauthToken(oauthToken);
    }

    @Override
    public AddPlayer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddPlayer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddPlayer setQuotaUser(java.lang.String quotaUser) {
      return (AddPlayer) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddPlayer setUserIp(java.lang.String userIp) {
      return (AddPlayer) super.setUserIp(userIp);
    }

    @Override
    public AddPlayer set(String parameterName, Object value) {
      return (AddPlayer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "get".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public Get get() throws java.io.IOException {
    Get result = new Get();
    initialize(result);
    return result;
  }

  public class Get extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal> {

    private static final String REST_PATH = "userlocal";

    /**
     * Create a request for the method "get".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     * <p> {@link
     * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
     * called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected Get() {
      super(UserLocalEndpoint.this, "GET", REST_PATH, null, com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Get setAlt(java.lang.String alt) {
      return (Get) super.setAlt(alt);
    }

    @Override
    public Get setFields(java.lang.String fields) {
      return (Get) super.setFields(fields);
    }

    @Override
    public Get setKey(java.lang.String key) {
      return (Get) super.setKey(key);
    }

    @Override
    public Get setOauthToken(java.lang.String oauthToken) {
      return (Get) super.setOauthToken(oauthToken);
    }

    @Override
    public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Get) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Get setQuotaUser(java.lang.String quotaUser) {
      return (Get) super.setQuotaUser(quotaUser);
    }

    @Override
    public Get setUserIp(java.lang.String userIp) {
      return (Get) super.setUserIp(userIp);
    }

    @Override
    public Get set(String parameterName, Object value) {
      return (Get) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getWithUsername".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link GetWithUsername#execute()} method to invoke the remote
   * operation.
   *
   * @param username
   * @return the request
   */
  public GetWithUsername getWithUsername(java.lang.String username) throws java.io.IOException {
    GetWithUsername result = new GetWithUsername(username);
    initialize(result);
    return result;
  }

  public class GetWithUsername extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal> {

    private static final String REST_PATH = "userlyfeboat/{username}";

    /**
     * Create a request for the method "getWithUsername".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link GetWithUsername#execute()} method to invoke the remote
     * operation. <p> {@link GetWithUsername#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param username
     * @since 1.13
     */
    protected GetWithUsername(java.lang.String username) {
      super(UserLocalEndpoint.this, "GET", REST_PATH, null, com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal.class);
      this.username = com.google.api.client.util.Preconditions.checkNotNull(username, "Required parameter username must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetWithUsername setAlt(java.lang.String alt) {
      return (GetWithUsername) super.setAlt(alt);
    }

    @Override
    public GetWithUsername setFields(java.lang.String fields) {
      return (GetWithUsername) super.setFields(fields);
    }

    @Override
    public GetWithUsername setKey(java.lang.String key) {
      return (GetWithUsername) super.setKey(key);
    }

    @Override
    public GetWithUsername setOauthToken(java.lang.String oauthToken) {
      return (GetWithUsername) super.setOauthToken(oauthToken);
    }

    @Override
    public GetWithUsername setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetWithUsername) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetWithUsername setQuotaUser(java.lang.String quotaUser) {
      return (GetWithUsername) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetWithUsername setUserIp(java.lang.String userIp) {
      return (GetWithUsername) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String username;

    /**

     */
    public java.lang.String getUsername() {
      return username;
    }

    public GetWithUsername setUsername(java.lang.String username) {
      this.username = username;
      return this;
    }

    @Override
    public GetWithUsername set(String parameterName, Object value) {
      return (GetWithUsername) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insert".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal}
   * @return the request
   */
  public Insert insert(com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal content) throws java.io.IOException {
    Insert result = new Insert(content);
    initialize(result);
    return result;
  }

  public class Insert extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal> {

    private static final String REST_PATH = "userlocal";

    /**
     * Create a request for the method "insert".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link Insert#execute()} method to invoke the remote
     * operation. <p> {@link
     * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal}
     * @since 1.13
     */
    protected Insert(com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal content) {
      super(UserLocalEndpoint.this, "POST", REST_PATH, content, com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal.class);
    }

    @Override
    public Insert setAlt(java.lang.String alt) {
      return (Insert) super.setAlt(alt);
    }

    @Override
    public Insert setFields(java.lang.String fields) {
      return (Insert) super.setFields(fields);
    }

    @Override
    public Insert setKey(java.lang.String key) {
      return (Insert) super.setKey(key);
    }

    @Override
    public Insert setOauthToken(java.lang.String oauthToken) {
      return (Insert) super.setOauthToken(oauthToken);
    }

    @Override
    public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Insert) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Insert setQuotaUser(java.lang.String quotaUser) {
      return (Insert) super.setQuotaUser(quotaUser);
    }

    @Override
    public Insert setUserIp(java.lang.String userIp) {
      return (Insert) super.setUserIp(userIp);
    }

    @Override
    public Insert set(String parameterName, Object value) {
      return (Insert) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertGame".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link InsertGame#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.Game}
   * @return the request
   */
  public InsertGame insertGame(com.challengeit.android.challengeit.userLocalEndpoint.model.Game content) throws java.io.IOException {
    InsertGame result = new InsertGame(content);
    initialize(result);
    return result;
  }

  public class InsertGame extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal> {

    private static final String REST_PATH = "userLocal/game";

    /**
     * Create a request for the method "insertGame".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link InsertGame#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertGame#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.Game}
     * @since 1.13
     */
    protected InsertGame(com.challengeit.android.challengeit.userLocalEndpoint.model.Game content) {
      super(UserLocalEndpoint.this, "POST", REST_PATH, content, com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal.class);
    }

    @Override
    public InsertGame setAlt(java.lang.String alt) {
      return (InsertGame) super.setAlt(alt);
    }

    @Override
    public InsertGame setFields(java.lang.String fields) {
      return (InsertGame) super.setFields(fields);
    }

    @Override
    public InsertGame setKey(java.lang.String key) {
      return (InsertGame) super.setKey(key);
    }

    @Override
    public InsertGame setOauthToken(java.lang.String oauthToken) {
      return (InsertGame) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertGame setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertGame) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertGame setQuotaUser(java.lang.String quotaUser) {
      return (InsertGame) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertGame setUserIp(java.lang.String userIp) {
      return (InsertGame) super.setUserIp(userIp);
    }

    @Override
    public InsertGame set(String parameterName, Object value) {
      return (InsertGame) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listMastersWithGame".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link ListMastersWithGame#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListMastersWithGame listMastersWithGame() throws java.io.IOException {
    ListMastersWithGame result = new ListMastersWithGame();
    initialize(result);
    return result;
  }

  public class ListMastersWithGame extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.CollectionResponseMasterWithGame> {

    private static final String REST_PATH = "UserLocal/listMasters";

    /**
     * Create a request for the method "listMastersWithGame".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link ListMastersWithGame#execute()} method to invoke the
     * remote operation. <p> {@link ListMastersWithGame#initialize(com.google.api.client.googleapis.se
     * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListMastersWithGame() {
      super(UserLocalEndpoint.this, "GET", REST_PATH, null, com.challengeit.android.challengeit.userLocalEndpoint.model.CollectionResponseMasterWithGame.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListMastersWithGame setAlt(java.lang.String alt) {
      return (ListMastersWithGame) super.setAlt(alt);
    }

    @Override
    public ListMastersWithGame setFields(java.lang.String fields) {
      return (ListMastersWithGame) super.setFields(fields);
    }

    @Override
    public ListMastersWithGame setKey(java.lang.String key) {
      return (ListMastersWithGame) super.setKey(key);
    }

    @Override
    public ListMastersWithGame setOauthToken(java.lang.String oauthToken) {
      return (ListMastersWithGame) super.setOauthToken(oauthToken);
    }

    @Override
    public ListMastersWithGame setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListMastersWithGame) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListMastersWithGame setQuotaUser(java.lang.String quotaUser) {
      return (ListMastersWithGame) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListMastersWithGame setUserIp(java.lang.String userIp) {
      return (ListMastersWithGame) super.setUserIp(userIp);
    }

    @Override
    public ListMastersWithGame set(String parameterName, Object value) {
      return (ListMastersWithGame) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listPlayersWithGames".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link ListPlayersWithGames#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListPlayersWithGames listPlayersWithGames() throws java.io.IOException {
    ListPlayersWithGames result = new ListPlayersWithGames();
    initialize(result);
    return result;
  }

  public class ListPlayersWithGames extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.CollectionResponsePlayerWithGame> {

    private static final String REST_PATH = "Userlocal/listPlayers";

    /**
     * Create a request for the method "listPlayersWithGames".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link ListPlayersWithGames#execute()} method to invoke the
     * remote operation. <p> {@link ListPlayersWithGames#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListPlayersWithGames() {
      super(UserLocalEndpoint.this, "GET", REST_PATH, null, com.challengeit.android.challengeit.userLocalEndpoint.model.CollectionResponsePlayerWithGame.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListPlayersWithGames setAlt(java.lang.String alt) {
      return (ListPlayersWithGames) super.setAlt(alt);
    }

    @Override
    public ListPlayersWithGames setFields(java.lang.String fields) {
      return (ListPlayersWithGames) super.setFields(fields);
    }

    @Override
    public ListPlayersWithGames setKey(java.lang.String key) {
      return (ListPlayersWithGames) super.setKey(key);
    }

    @Override
    public ListPlayersWithGames setOauthToken(java.lang.String oauthToken) {
      return (ListPlayersWithGames) super.setOauthToken(oauthToken);
    }

    @Override
    public ListPlayersWithGames setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListPlayersWithGames) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListPlayersWithGames setQuotaUser(java.lang.String quotaUser) {
      return (ListPlayersWithGames) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListPlayersWithGames setUserIp(java.lang.String userIp) {
      return (ListPlayersWithGames) super.setUserIp(userIp);
    }

    @Override
    public ListPlayersWithGames set(String parameterName, Object value) {
      return (ListPlayersWithGames) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUsers".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link ListUsers#execute()} method to invoke the remote operation.
   *
   * @param count
   * @return the request
   */
  public ListUsers listUsers(java.lang.Integer count) throws java.io.IOException {
    ListUsers result = new ListUsers(count);
    initialize(result);
    return result;
  }

  public class ListUsers extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.CollectionResponseUserLocal> {

    private static final String REST_PATH = "UserLocal/list";

    /**
     * Create a request for the method "listUsers".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link ListUsers#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param count
     * @since 1.13
     */
    protected ListUsers(java.lang.Integer count) {
      super(UserLocalEndpoint.this, "GET", REST_PATH, null, com.challengeit.android.challengeit.userLocalEndpoint.model.CollectionResponseUserLocal.class);
      this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUsers setAlt(java.lang.String alt) {
      return (ListUsers) super.setAlt(alt);
    }

    @Override
    public ListUsers setFields(java.lang.String fields) {
      return (ListUsers) super.setFields(fields);
    }

    @Override
    public ListUsers setKey(java.lang.String key) {
      return (ListUsers) super.setKey(key);
    }

    @Override
    public ListUsers setOauthToken(java.lang.String oauthToken) {
      return (ListUsers) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUsers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUsers setQuotaUser(java.lang.String quotaUser) {
      return (ListUsers) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUsers setUserIp(java.lang.String userIp) {
      return (ListUsers) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public ListUsers setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @Override
    public ListUsers set(String parameterName, Object value) {
      return (ListUsers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "patch".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal}
   * @return the request
   */
  public Patch patch(com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal content) throws java.io.IOException {
    Patch result = new Patch(content);
    initialize(result);
    return result;
  }

  public class Patch extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal> {

    private static final String REST_PATH = "userlocal";

    /**
     * Create a request for the method "patch".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
     * operation. <p> {@link
     * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal}
     * @since 1.13
     */
    protected Patch(com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal content) {
      super(UserLocalEndpoint.this, "PATCH", REST_PATH, content, com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal.class);
    }

    @Override
    public Patch setAlt(java.lang.String alt) {
      return (Patch) super.setAlt(alt);
    }

    @Override
    public Patch setFields(java.lang.String fields) {
      return (Patch) super.setFields(fields);
    }

    @Override
    public Patch setKey(java.lang.String key) {
      return (Patch) super.setKey(key);
    }

    @Override
    public Patch setOauthToken(java.lang.String oauthToken) {
      return (Patch) super.setOauthToken(oauthToken);
    }

    @Override
    public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Patch) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Patch setQuotaUser(java.lang.String quotaUser) {
      return (Patch) super.setQuotaUser(quotaUser);
    }

    @Override
    public Patch setUserIp(java.lang.String userIp) {
      return (Patch) super.setUserIp(userIp);
    }

    @Override
    public Patch set(String parameterName, Object value) {
      return (Patch) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "update".
   *
   * This request holds the parameters needed by the userLocalEndpoint server.  After setting any
   * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal}
   * @return the request
   */
  public Update update(com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal content) throws java.io.IOException {
    Update result = new Update(content);
    initialize(result);
    return result;
  }

  public class Update extends UserLocalEndpointRequest<com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal> {

    private static final String REST_PATH = "userlocal";

    /**
     * Create a request for the method "update".
     *
     * This request holds the parameters needed by the the userLocalEndpoint server.  After setting
     * any optional parameters, call the {@link Update#execute()} method to invoke the remote
     * operation. <p> {@link
     * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal}
     * @since 1.13
     */
    protected Update(com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal content) {
      super(UserLocalEndpoint.this, "PUT", REST_PATH, content, com.challengeit.android.challengeit.userLocalEndpoint.model.UserLocal.class);
    }

    @Override
    public Update setAlt(java.lang.String alt) {
      return (Update) super.setAlt(alt);
    }

    @Override
    public Update setFields(java.lang.String fields) {
      return (Update) super.setFields(fields);
    }

    @Override
    public Update setKey(java.lang.String key) {
      return (Update) super.setKey(key);
    }

    @Override
    public Update setOauthToken(java.lang.String oauthToken) {
      return (Update) super.setOauthToken(oauthToken);
    }

    @Override
    public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Update) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Update setQuotaUser(java.lang.String quotaUser) {
      return (Update) super.setQuotaUser(quotaUser);
    }

    @Override
    public Update setUserIp(java.lang.String userIp) {
      return (Update) super.setUserIp(userIp);
    }

    @Override
    public Update set(String parameterName, Object value) {
      return (Update) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link UserLocalEndpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link UserLocalEndpoint}. */
    @Override
    public UserLocalEndpoint build() {
      return new UserLocalEndpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UserLocalEndpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUserLocalEndpointRequestInitializer(
        UserLocalEndpointRequestInitializer userlocalendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(userlocalendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
