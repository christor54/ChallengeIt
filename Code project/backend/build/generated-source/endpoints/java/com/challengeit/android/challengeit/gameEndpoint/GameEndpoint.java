/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-01-14 17:53:03 UTC)
 * on 2015-03-23 at 06:05:03 UTC 
 * Modify at your own risk.
 */

package com.challengeit.android.challengeit.gameEndpoint;

/**
 * Service definition for GameEndpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GameEndpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class GameEndpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the gameEndpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://challengeit-92.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "gameEndpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public GameEndpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  GameEndpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addChallenge".
   *
   * This request holds the parameters needed by the gameEndpoint server.  After setting any optional
   * parameters, call the {@link AddChallenge#execute()} method to invoke the remote operation.
   *
   * @param gameId
   * @param content the {@link com.challengeit.android.challengeit.gameEndpoint.model.Challenge}
   * @return the request
   */
  public AddChallenge addChallenge(java.lang.Long gameId, com.challengeit.android.challengeit.gameEndpoint.model.Challenge content) throws java.io.IOException {
    AddChallenge result = new AddChallenge(gameId, content);
    initialize(result);
    return result;
  }

  public class AddChallenge extends GameEndpointRequest<com.challengeit.android.challengeit.gameEndpoint.model.Game> {

    private static final String REST_PATH = "addChallenge/{game_Id}";

    /**
     * Create a request for the method "addChallenge".
     *
     * This request holds the parameters needed by the the gameEndpoint server.  After setting any
     * optional parameters, call the {@link AddChallenge#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddChallenge#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param gameId
     * @param content the {@link com.challengeit.android.challengeit.gameEndpoint.model.Challenge}
     * @since 1.13
     */
    protected AddChallenge(java.lang.Long gameId, com.challengeit.android.challengeit.gameEndpoint.model.Challenge content) {
      super(GameEndpoint.this, "POST", REST_PATH, content, com.challengeit.android.challengeit.gameEndpoint.model.Game.class);
      this.gameId = com.google.api.client.util.Preconditions.checkNotNull(gameId, "Required parameter gameId must be specified.");
    }

    @Override
    public AddChallenge setAlt(java.lang.String alt) {
      return (AddChallenge) super.setAlt(alt);
    }

    @Override
    public AddChallenge setFields(java.lang.String fields) {
      return (AddChallenge) super.setFields(fields);
    }

    @Override
    public AddChallenge setKey(java.lang.String key) {
      return (AddChallenge) super.setKey(key);
    }

    @Override
    public AddChallenge setOauthToken(java.lang.String oauthToken) {
      return (AddChallenge) super.setOauthToken(oauthToken);
    }

    @Override
    public AddChallenge setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddChallenge) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddChallenge setQuotaUser(java.lang.String quotaUser) {
      return (AddChallenge) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddChallenge setUserIp(java.lang.String userIp) {
      return (AddChallenge) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("game_Id")
    private java.lang.Long gameId;

    /**

     */
    public java.lang.Long getGameId() {
      return gameId;
    }

    public AddChallenge setGameId(java.lang.Long gameId) {
      this.gameId = gameId;
      return this;
    }

    @Override
    public AddChallenge set(String parameterName, Object value) {
      return (AddChallenge) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addPlayerToGame".
   *
   * This request holds the parameters needed by the gameEndpoint server.  After setting any optional
   * parameters, call the {@link AddPlayerToGame#execute()} method to invoke the remote operation.
   *
   * @param username
   * @param gameId
   * @return the request
   */
  public AddPlayerToGame addPlayerToGame(java.lang.String username, java.lang.Long gameId) throws java.io.IOException {
    AddPlayerToGame result = new AddPlayerToGame(username, gameId);
    initialize(result);
    return result;
  }

  public class AddPlayerToGame extends GameEndpointRequest<com.challengeit.android.challengeit.gameEndpoint.model.Game> {

    private static final String REST_PATH = "addPlayerToGame/{username}/{gameId}";

    /**
     * Create a request for the method "addPlayerToGame".
     *
     * This request holds the parameters needed by the the gameEndpoint server.  After setting any
     * optional parameters, call the {@link AddPlayerToGame#execute()} method to invoke the remote
     * operation. <p> {@link AddPlayerToGame#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param username
     * @param gameId
     * @since 1.13
     */
    protected AddPlayerToGame(java.lang.String username, java.lang.Long gameId) {
      super(GameEndpoint.this, "POST", REST_PATH, null, com.challengeit.android.challengeit.gameEndpoint.model.Game.class);
      this.username = com.google.api.client.util.Preconditions.checkNotNull(username, "Required parameter username must be specified.");
      this.gameId = com.google.api.client.util.Preconditions.checkNotNull(gameId, "Required parameter gameId must be specified.");
    }

    @Override
    public AddPlayerToGame setAlt(java.lang.String alt) {
      return (AddPlayerToGame) super.setAlt(alt);
    }

    @Override
    public AddPlayerToGame setFields(java.lang.String fields) {
      return (AddPlayerToGame) super.setFields(fields);
    }

    @Override
    public AddPlayerToGame setKey(java.lang.String key) {
      return (AddPlayerToGame) super.setKey(key);
    }

    @Override
    public AddPlayerToGame setOauthToken(java.lang.String oauthToken) {
      return (AddPlayerToGame) super.setOauthToken(oauthToken);
    }

    @Override
    public AddPlayerToGame setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddPlayerToGame) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddPlayerToGame setQuotaUser(java.lang.String quotaUser) {
      return (AddPlayerToGame) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddPlayerToGame setUserIp(java.lang.String userIp) {
      return (AddPlayerToGame) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String username;

    /**

     */
    public java.lang.String getUsername() {
      return username;
    }

    public AddPlayerToGame setUsername(java.lang.String username) {
      this.username = username;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long gameId;

    /**

     */
    public java.lang.Long getGameId() {
      return gameId;
    }

    public AddPlayerToGame setGameId(java.lang.Long gameId) {
      this.gameId = gameId;
      return this;
    }

    @Override
    public AddPlayerToGame set(String parameterName, Object value) {
      return (AddPlayerToGame) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getGame".
   *
   * This request holds the parameters needed by the gameEndpoint server.  After setting any optional
   * parameters, call the {@link GetGame#execute()} method to invoke the remote operation.
   *
   * @param gameName
   * @return the request
   */
  public GetGame getGame(java.lang.String gameName) throws java.io.IOException {
    GetGame result = new GetGame(gameName);
    initialize(result);
    return result;
  }

  public class GetGame extends GameEndpointRequest<com.challengeit.android.challengeit.gameEndpoint.model.Game> {

    private static final String REST_PATH = "game/gamename";

    /**
     * Create a request for the method "getGame".
     *
     * This request holds the parameters needed by the the gameEndpoint server.  After setting any
     * optional parameters, call the {@link GetGame#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetGame#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param gameName
     * @since 1.13
     */
    protected GetGame(java.lang.String gameName) {
      super(GameEndpoint.this, "GET", REST_PATH, null, com.challengeit.android.challengeit.gameEndpoint.model.Game.class);
      this.gameName = com.google.api.client.util.Preconditions.checkNotNull(gameName, "Required parameter gameName must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetGame setAlt(java.lang.String alt) {
      return (GetGame) super.setAlt(alt);
    }

    @Override
    public GetGame setFields(java.lang.String fields) {
      return (GetGame) super.setFields(fields);
    }

    @Override
    public GetGame setKey(java.lang.String key) {
      return (GetGame) super.setKey(key);
    }

    @Override
    public GetGame setOauthToken(java.lang.String oauthToken) {
      return (GetGame) super.setOauthToken(oauthToken);
    }

    @Override
    public GetGame setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetGame) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetGame setQuotaUser(java.lang.String quotaUser) {
      return (GetGame) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetGame setUserIp(java.lang.String userIp) {
      return (GetGame) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String gameName;

    /**

     */
    public java.lang.String getGameName() {
      return gameName;
    }

    public GetGame setGameName(java.lang.String gameName) {
      this.gameName = gameName;
      return this;
    }

    @Override
    public GetGame set(String parameterName, Object value) {
      return (GetGame) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertGame".
   *
   * This request holds the parameters needed by the gameEndpoint server.  After setting any optional
   * parameters, call the {@link InsertGame#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.challengeit.android.challengeit.gameEndpoint.model.Game}
   * @return the request
   */
  public InsertGame insertGame(com.challengeit.android.challengeit.gameEndpoint.model.Game content) throws java.io.IOException {
    InsertGame result = new InsertGame(content);
    initialize(result);
    return result;
  }

  public class InsertGame extends GameEndpointRequest<com.challengeit.android.challengeit.gameEndpoint.model.Game> {

    private static final String REST_PATH = "game";

    /**
     * Create a request for the method "insertGame".
     *
     * This request holds the parameters needed by the the gameEndpoint server.  After setting any
     * optional parameters, call the {@link InsertGame#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertGame#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.challengeit.android.challengeit.gameEndpoint.model.Game}
     * @since 1.13
     */
    protected InsertGame(com.challengeit.android.challengeit.gameEndpoint.model.Game content) {
      super(GameEndpoint.this, "POST", REST_PATH, content, com.challengeit.android.challengeit.gameEndpoint.model.Game.class);
    }

    @Override
    public InsertGame setAlt(java.lang.String alt) {
      return (InsertGame) super.setAlt(alt);
    }

    @Override
    public InsertGame setFields(java.lang.String fields) {
      return (InsertGame) super.setFields(fields);
    }

    @Override
    public InsertGame setKey(java.lang.String key) {
      return (InsertGame) super.setKey(key);
    }

    @Override
    public InsertGame setOauthToken(java.lang.String oauthToken) {
      return (InsertGame) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertGame setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertGame) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertGame setQuotaUser(java.lang.String quotaUser) {
      return (InsertGame) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertGame setUserIp(java.lang.String userIp) {
      return (InsertGame) super.setUserIp(userIp);
    }

    @Override
    public InsertGame set(String parameterName, Object value) {
      return (InsertGame) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listGames".
   *
   * This request holds the parameters needed by the gameEndpoint server.  After setting any optional
   * parameters, call the {@link ListGames#execute()} method to invoke the remote operation.
   *
   * @param count
   * @return the request
   */
  public ListGames listGames(java.lang.Integer count) throws java.io.IOException {
    ListGames result = new ListGames(count);
    initialize(result);
    return result;
  }

  public class ListGames extends GameEndpointRequest<com.challengeit.android.challengeit.gameEndpoint.model.CollectionResponseGame> {

    private static final String REST_PATH = "game/list";

    /**
     * Create a request for the method "listGames".
     *
     * This request holds the parameters needed by the the gameEndpoint server.  After setting any
     * optional parameters, call the {@link ListGames#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListGames#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param count
     * @since 1.13
     */
    protected ListGames(java.lang.Integer count) {
      super(GameEndpoint.this, "GET", REST_PATH, null, com.challengeit.android.challengeit.gameEndpoint.model.CollectionResponseGame.class);
      this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListGames setAlt(java.lang.String alt) {
      return (ListGames) super.setAlt(alt);
    }

    @Override
    public ListGames setFields(java.lang.String fields) {
      return (ListGames) super.setFields(fields);
    }

    @Override
    public ListGames setKey(java.lang.String key) {
      return (ListGames) super.setKey(key);
    }

    @Override
    public ListGames setOauthToken(java.lang.String oauthToken) {
      return (ListGames) super.setOauthToken(oauthToken);
    }

    @Override
    public ListGames setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListGames) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListGames setQuotaUser(java.lang.String quotaUser) {
      return (ListGames) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListGames setUserIp(java.lang.String userIp) {
      return (ListGames) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public ListGames setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @Override
    public ListGames set(String parameterName, Object value) {
      return (ListGames) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listPlayers".
   *
   * This request holds the parameters needed by the gameEndpoint server.  After setting any optional
   * parameters, call the {@link ListPlayers#execute()} method to invoke the remote operation.
   *
   * @param count
   * @return the request
   */
  public ListPlayers listPlayers(java.lang.Integer count) throws java.io.IOException {
    ListPlayers result = new ListPlayers(count);
    initialize(result);
    return result;
  }

  public class ListPlayers extends GameEndpointRequest<com.challengeit.android.challengeit.gameEndpoint.model.CollectionResponsePlayer> {

    private static final String REST_PATH = "player/list";

    /**
     * Create a request for the method "listPlayers".
     *
     * This request holds the parameters needed by the the gameEndpoint server.  After setting any
     * optional parameters, call the {@link ListPlayers#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListPlayers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param count
     * @since 1.13
     */
    protected ListPlayers(java.lang.Integer count) {
      super(GameEndpoint.this, "GET", REST_PATH, null, com.challengeit.android.challengeit.gameEndpoint.model.CollectionResponsePlayer.class);
      this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListPlayers setAlt(java.lang.String alt) {
      return (ListPlayers) super.setAlt(alt);
    }

    @Override
    public ListPlayers setFields(java.lang.String fields) {
      return (ListPlayers) super.setFields(fields);
    }

    @Override
    public ListPlayers setKey(java.lang.String key) {
      return (ListPlayers) super.setKey(key);
    }

    @Override
    public ListPlayers setOauthToken(java.lang.String oauthToken) {
      return (ListPlayers) super.setOauthToken(oauthToken);
    }

    @Override
    public ListPlayers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListPlayers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListPlayers setQuotaUser(java.lang.String quotaUser) {
      return (ListPlayers) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListPlayers setUserIp(java.lang.String userIp) {
      return (ListPlayers) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public ListPlayers setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @Override
    public ListPlayers set(String parameterName, Object value) {
      return (ListPlayers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "respondToChallenge".
   *
   * This request holds the parameters needed by the gameEndpoint server.  After setting any optional
   * parameters, call the {@link RespondToChallenge#execute()} method to invoke the remote operation.
   *
   * @param gameId
   * @param challengeName
   * @param content the {@link com.challengeit.android.challengeit.gameEndpoint.model.Response}
   * @return the request
   */
  public RespondToChallenge respondToChallenge(java.lang.Long gameId, java.lang.String challengeName, com.challengeit.android.challengeit.gameEndpoint.model.Response content) throws java.io.IOException {
    RespondToChallenge result = new RespondToChallenge(gameId, challengeName, content);
    initialize(result);
    return result;
  }

  public class RespondToChallenge extends GameEndpointRequest<com.challengeit.android.challengeit.gameEndpoint.model.Game> {

    private static final String REST_PATH = "respondToChallenge/{gameId}/{challengeName}";

    /**
     * Create a request for the method "respondToChallenge".
     *
     * This request holds the parameters needed by the the gameEndpoint server.  After setting any
     * optional parameters, call the {@link RespondToChallenge#execute()} method to invoke the remote
     * operation. <p> {@link RespondToChallenge#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param gameId
     * @param challengeName
     * @param content the {@link com.challengeit.android.challengeit.gameEndpoint.model.Response}
     * @since 1.13
     */
    protected RespondToChallenge(java.lang.Long gameId, java.lang.String challengeName, com.challengeit.android.challengeit.gameEndpoint.model.Response content) {
      super(GameEndpoint.this, "POST", REST_PATH, content, com.challengeit.android.challengeit.gameEndpoint.model.Game.class);
      this.gameId = com.google.api.client.util.Preconditions.checkNotNull(gameId, "Required parameter gameId must be specified.");
      this.challengeName = com.google.api.client.util.Preconditions.checkNotNull(challengeName, "Required parameter challengeName must be specified.");
    }

    @Override
    public RespondToChallenge setAlt(java.lang.String alt) {
      return (RespondToChallenge) super.setAlt(alt);
    }

    @Override
    public RespondToChallenge setFields(java.lang.String fields) {
      return (RespondToChallenge) super.setFields(fields);
    }

    @Override
    public RespondToChallenge setKey(java.lang.String key) {
      return (RespondToChallenge) super.setKey(key);
    }

    @Override
    public RespondToChallenge setOauthToken(java.lang.String oauthToken) {
      return (RespondToChallenge) super.setOauthToken(oauthToken);
    }

    @Override
    public RespondToChallenge setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RespondToChallenge) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RespondToChallenge setQuotaUser(java.lang.String quotaUser) {
      return (RespondToChallenge) super.setQuotaUser(quotaUser);
    }

    @Override
    public RespondToChallenge setUserIp(java.lang.String userIp) {
      return (RespondToChallenge) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long gameId;

    /**

     */
    public java.lang.Long getGameId() {
      return gameId;
    }

    public RespondToChallenge setGameId(java.lang.Long gameId) {
      this.gameId = gameId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String challengeName;

    /**

     */
    public java.lang.String getChallengeName() {
      return challengeName;
    }

    public RespondToChallenge setChallengeName(java.lang.String challengeName) {
      this.challengeName = challengeName;
      return this;
    }

    @Override
    public RespondToChallenge set(String parameterName, Object value) {
      return (RespondToChallenge) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "reviewResponse".
   *
   * This request holds the parameters needed by the gameEndpoint server.  After setting any optional
   * parameters, call the {@link ReviewResponse#execute()} method to invoke the remote operation.
   *
   * @param gameId
   * @param challengeName
   * @param authorUsername
   * @return the request
   */
  public ReviewResponse reviewResponse(java.lang.Long gameId, java.lang.String challengeName, java.lang.String authorUsername) throws java.io.IOException {
    ReviewResponse result = new ReviewResponse(gameId, challengeName, authorUsername);
    initialize(result);
    return result;
  }

  public class ReviewResponse extends GameEndpointRequest<Void> {

    private static final String REST_PATH = "reviewResponse/{gameId}/{challengeName}/{author_username}";

    /**
     * Create a request for the method "reviewResponse".
     *
     * This request holds the parameters needed by the the gameEndpoint server.  After setting any
     * optional parameters, call the {@link ReviewResponse#execute()} method to invoke the remote
     * operation. <p> {@link ReviewResponse#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param gameId
     * @param challengeName
     * @param authorUsername
     * @since 1.13
     */
    protected ReviewResponse(java.lang.Long gameId, java.lang.String challengeName, java.lang.String authorUsername) {
      super(GameEndpoint.this, "POST", REST_PATH, null, Void.class);
      this.gameId = com.google.api.client.util.Preconditions.checkNotNull(gameId, "Required parameter gameId must be specified.");
      this.challengeName = com.google.api.client.util.Preconditions.checkNotNull(challengeName, "Required parameter challengeName must be specified.");
      this.authorUsername = com.google.api.client.util.Preconditions.checkNotNull(authorUsername, "Required parameter authorUsername must be specified.");
    }

    @Override
    public ReviewResponse setAlt(java.lang.String alt) {
      return (ReviewResponse) super.setAlt(alt);
    }

    @Override
    public ReviewResponse setFields(java.lang.String fields) {
      return (ReviewResponse) super.setFields(fields);
    }

    @Override
    public ReviewResponse setKey(java.lang.String key) {
      return (ReviewResponse) super.setKey(key);
    }

    @Override
    public ReviewResponse setOauthToken(java.lang.String oauthToken) {
      return (ReviewResponse) super.setOauthToken(oauthToken);
    }

    @Override
    public ReviewResponse setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ReviewResponse) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ReviewResponse setQuotaUser(java.lang.String quotaUser) {
      return (ReviewResponse) super.setQuotaUser(quotaUser);
    }

    @Override
    public ReviewResponse setUserIp(java.lang.String userIp) {
      return (ReviewResponse) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long gameId;

    /**

     */
    public java.lang.Long getGameId() {
      return gameId;
    }

    public ReviewResponse setGameId(java.lang.Long gameId) {
      this.gameId = gameId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String challengeName;

    /**

     */
    public java.lang.String getChallengeName() {
      return challengeName;
    }

    public ReviewResponse setChallengeName(java.lang.String challengeName) {
      this.challengeName = challengeName;
      return this;
    }

    @com.google.api.client.util.Key("author_username")
    private java.lang.String authorUsername;

    /**

     */
    public java.lang.String getAuthorUsername() {
      return authorUsername;
    }

    public ReviewResponse setAuthorUsername(java.lang.String authorUsername) {
      this.authorUsername = authorUsername;
      return this;
    }

    @Override
    public ReviewResponse set(String parameterName, Object value) {
      return (ReviewResponse) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link GameEndpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link GameEndpoint}. */
    @Override
    public GameEndpoint build() {
      return new GameEndpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GameEndpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGameEndpointRequestInitializer(
        GameEndpointRequestInitializer gameendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(gameendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
